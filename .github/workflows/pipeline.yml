# CI/CD Release Workflow
name: pipeline

# ensure permissions are explicitly defined
# by configuring one we disable the remaining permissions
# see: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idpermissions
# permissions:
#  contents: read

on:
  push:
    branches:
      - 'master'
env:
  COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
  PULL_NUMBER: ${{ github.event.pull_request.number }}
  RUN_ID: ${{ github.run_id }}
  FORCE_COLOR: 2

jobs:
  pipeline:
    name: Node ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        node-version: ['16.x']
        os: ['ubuntu-latest']

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install project
        run: yarn --prefer-offline
        id: install

      - name: Build project
        run: yarn run build
        id: production

      - name: Pack project
        run: npm pack
        id: pack

      - name: Set output info
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create automatic release
        uses: 'marvinpinto/action-automatic-releases@latest'
        if: ${{ github.event_name == 'push'}}
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: 'latest'
          prerelease: true
          files: |
            LICENSE.md
            **.tgz
        id: 'automatic_releases'


  release:
#    if: startsWith(github.ref, 'refs/tags/')
    if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - run: echo "Deploying tag ${{ github.ref }}" ;
      - name: "Build Changelog"
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/workflows/release.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v3
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
